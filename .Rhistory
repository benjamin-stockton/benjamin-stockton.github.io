+ (1 + pitch_type | player_name),
family = binomial(link = "logit")))
saveRDS(fit, "data/fit-glmm-imps.rds")
citation("broom.mixed")
#| label: load-pitch-data-no-run
#| echo: true
#| warning: false
#| eval: false
library(mice)
library(Amelia)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(broom.mixed)
library(imputeangles)
theme_set(theme_bw())
peralta_id <- baseballr::playerid_lookup(last_name = "Peralta",
first_name = "Freddy") |>
dplyr::pull(mlbam_id)
burnes_id <- baseballr::playerid_lookup(last_name = "Burnes",
first_name = "Corbin") |>
dplyr::pull(mlbam_id)
#| label: load-pitch-data
#| echo: false
#| results: hide
#| warning: false
library(mice)
library(Amelia)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(broom.mixed)
library(imputeangles)
theme_set(theme_bw())
pitches <- readr::read_csv("data/brewers_sp_2023_pitches.csv")
pitches <- pitches |>
select(
game_date, pitcher, batter, game_type, home_team, away_team,
pitch_type, type, release_speed, release_spin_rate, release_extension,
spin_axis, release_pos_x, release_pos_z, plate_x, plate_z,
player_name, events, description
) |>
filter(game_type == "R",
type != "X") |>
mutate(
spin_axis = spin_axis * pi / 360,
cos_spin = cos(spin_axis),
sin_spin = sin(spin_axis),
cos_2spin = cos(2*spin_axis),
sin_2spin = sin(2*spin_axis)
) |>
select(-game_type)
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate()
# kableExtra::kbl(format = "html", digits = 4, booktabs = TRUE)
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate(
se = std.error,
moe = qt(0.975, df = df) * se,
u95 = estimate + moe,
l95 = estimate - moe
) |>
select(term, estimate, se, l95, u95)
# kableExtra::kbl(format = "html", digits = 4, booktabs = TRUE)
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate(
se = std.error,
moe = qt(0.975, df = df) * se,
u95 = estimate + moe,
l95 = estimate - moe
) |>
select(term, estimate, se, l95, u95)
kableExtra::kbl(format = "html", digits = 4, booktabs = TRUE,
colnames = c("Term", "$\\hat{\\beta}$", "$se(\\hat{\\beta})$",
"LB 95% CI", "UB 95% CI"))
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate(
se = std.error,
moe = qt(0.975, df = df) * se,
u95 = estimate + moe,
l95 = estimate - moe
) |>
select(term, estimate, se, l95, u95) |>
kableExtra::kbl(format = "html", digits = 4, booktabs = TRUE,
colnames = c("Term", "$\\hat{\\beta}$", "$se(\\hat{\\beta})$",
"LB 95% CI", "UB 95% CI"))
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate(
se = std.error,
moe = qt(0.975, df = df) * se,
u95 = estimate + moe,
l95 = estimate - moe
) |>
select(term, estimate, se, l95, u95) |>
kableExtra::kbl(format = "html", digits = 4, booktabs = TRUE,
col.names = c("Term", "$\\hat{\\beta}$", "$se(\\hat{\\beta})$",
"LB 95% CI", "UB 95% CI"))
#| label: fit-glmm-imps
#| include: false
#| eval: false
imps <- readRDS("data/pitch_imputations.rds")
fit <- with(imps, lme4::glmer(type ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = binomial(link = "logit")))
#| label: fit-glmm-imps
#| include: false
#| eval: false
imps <- readRDS("data/pitch_imputations.rds")
fit <- with(imps, lme4::glmer(type ~ cos_spin + sin_spin
+ cos_2spin + sin_2spin
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name)
+ (1 + cos_spin + sin_spin + release_speed | pitch_type),
family = binomial(link = "logit")))
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_muliple(type ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = binomial(link = "logit"),
data = imps)
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(type ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = binomial(link = "logit"),
data = imps)
#| label: fit-glmm-imps
#| include: false
#| eval: false
imps <- readRDS("data/pitch_imputations.rds")
fit <- with(imps, lme4::glmer(type ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = binomial(link = "logit")))
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate(
se = std.error,
moe = qt(0.975, df = df) * se,
u95 = estimate + moe,
l95 = estimate - moe
) |>
select(term, estimate, se, l95, u95) |>
kableExtra::kbl(format = "markdown", digits = 4, booktabs = TRUE,
col.names = c("Term", "$\\hat{\\beta}$", "$se(\\hat{\\beta})$",
"LB 95% CI", "UB 95% CI"))
#| label: load-pitch-data
#| echo: false
#| results: hide
#| warning: false
library(mice)
library(Amelia)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(broom.mixed)
library(imputeangles)
theme_set(theme_bw())
pitches <- readr::read_csv("data/brewers_sp_2023_pitches.csv")
pitches <- pitches |>
select(
game_date, pitcher, batter, game_type, home_team, away_team,
pitch_type, type, release_speed, release_spin_rate, release_extension,
spin_axis, release_pos_x, release_pos_z, plate_x, plate_z,
player_name, events, description
) |>
filter(game_type == "R",
type != "X") |>
mutate(
spin_axis = spin_axis * pi / 360,
cos_spin = cos(spin_axis),
sin_spin = sin(spin_axis),
cos_2spin = cos(2*spin_axis),
sin_2spin = sin(2*spin_axis),
strike = case_when(
type == "S" ~ 1,
type == "B" ~ 0,
TRUE ~ NA
)
) |>
select(-game_type)
#| label: fig-miss-map
#| fig-cap: Missinginess matrix plot where red indicates missingness in that observation.
pitches |>
select(
pitch_type, release_speed, release_spin_rate, spin_axis,
release_extension, plate_x, plate_z
) |>
VIM::matrixplot()
#| label: pitches-thrown-norun
#| echo: true
#| eval: false
pitches |>
group_by(player_name) |>
summarize(n_pitches = n(),
n_fastball = sum(pitch_type %in% c("FC", "FF", "FS", "SI")),
n_offspeed = sum(pitch_type %in% c("CH", "CU", "SL", "ST")),
n_missing = sum(is.na(pitch_type)))
#| label: tbl-pitches-thrown
#| tbl-cap: Number of pitches thrown by each starting pitcher.
#| echo: false
#| eval: true
pitches$type <- factor(pitches$type)
pitches |>
group_by(player_name) |>
summarize(n_pitches = n(),
n_fastball = sum(pitch_type %in% c("FC", "FF", "FS", "SI")),
n_offspeed = sum(pitch_type %in% c("CH", "CU", "SL", "ST")),
n_missing = sum(is.na(pitch_type))) |>
kableExtra::kable(format = "html",
colnames = c("Name", "N Pitches", "N Fastball", "N Offspeed", "N Missing"))
#| label: set-up-mice
#| echo: true
pitches[,c("release_speed", "release_extension", "release_spin_rate")] <- scale(pitches[,c("release_speed", "release_extension", "release_spin_rate")])
pitches <- pitches |>
mutate(
rate_cos_spin = release_spin_rate * cos(spin_axis),
rate_sin_spin = release_spin_rate * sin(spin_axis)
)
imp0 <- mice(pitches, m = 1, maxit = 0, method = "pmm")
methods <- imp0$method
methods["spin_axis"] <- "bpnreg"
methods["cos_spin"] <- "~cos(spin_axis)"
methods["sin_spin"] <- "~sin(spin_axis)"
methods["cos_2spin"] <- "~cos(2*spin_axis)"
methods["sin_2spin"] <- "~sin(2*spin_axis)"
methods
pred_mat <- imp0$predictorMatrix
pred_mat[,c("game_date", "pitcher", "batter", "home_team", "away_team", "type",
"events", "player_name", "description", "spin_axis")] <- 0
pred_mat["spin_axis", c("cos_spin", "sin_spin", "cos_2spin", "sin_2spin")] <- 0
pred_mat[c("cos_spin", "sin_spin", "cos_2spin", "sin_2spin"), ] <- 0
pred_mat[c("cos_spin", "sin_spin", "cos_2spin", "sin_2spin"), "spin_axis"] <- 1
pred_mat[c("spin_axis", "cos_spin", "sin_spin"), c("spin_axis", "cos_spin", "sin_spin", "release_speed", "release_extension")]
#| label: run-mice-norun
#| echo: true
#| eval: false
imps <- mice(pitches, m = 5, maxit = 5, method = methods,
predictorMatrix = pred_mat, printFlag = FALSE)
#| label: run-mice
#| include: false
#| eval: false
imps <- mice(pitches, m = 5, maxit = 5, method = methods,
predictorMatrix = pred_mat, printFlag = TRUE)
saveRDS(imps, "data/pitch_imputations.rds")
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(strike ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = binomial(link = "logit"),
data = imps)
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(strike ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = bernoulli(link = "logit"),
data = imps)
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(strike ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = bernoulli(link = "logit"),
data = imps,
cores = 8,
chains = 2,
refresh = 1000,
save_model = "log-reg-glmm-pitch.stan")
#| label: load-pitch-data
#| echo: false
#| results: hide
#| warning: false
library(mice)
library(Amelia)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(broom.mixed)
library(imputeangles)
theme_set(theme_bw())
pitches <- readr::read_csv("data/brewers_sp_2023_pitches.csv")
pitches <- pitches |>
select(
game_date, pitcher, batter, game_type, home_team, away_team,
pitch_type, type, release_speed, release_spin_rate, release_extension,
spin_axis, release_pos_x, release_pos_z, plate_x, plate_z,
player_name, events, description
) |>
filter(game_type == "R",
type != "X") |>
mutate(
spin_axis = spin_axis * pi / 360,
cos_spin = cos(spin_axis),
sin_spin = sin(spin_axis),
cos_2spin = cos(2*spin_axis),
sin_2spin = sin(2*spin_axis),
strike = case_when(
type == "S" ~ 1,
type == "B" ~ 0,
TRUE ~ NA
)
) |>
select(-game_type)
#| label: fig-miss-map
#| fig-cap: Missinginess matrix plot where red indicates missingness in that observation.
pitches |>
select(
pitch_type, release_speed, release_spin_rate, spin_axis,
release_extension, plate_x, plate_z
) |>
VIM::matrixplot()
#| label: pitches-thrown-norun
#| echo: true
#| eval: false
pitches |>
group_by(player_name) |>
summarize(n_pitches = n(),
n_fastball = sum(pitch_type %in% c("FC", "FF", "FS", "SI")),
n_offspeed = sum(pitch_type %in% c("CH", "CU", "SL", "ST")),
n_missing = sum(is.na(pitch_type)))
#| label: tbl-pitches-thrown
#| tbl-cap: Number of pitches thrown by each starting pitcher.
#| echo: false
#| eval: true
pitches$type <- factor(pitches$type)
pitches |>
group_by(player_name) |>
summarize(n_pitches = n(),
n_fastball = sum(pitch_type %in% c("FC", "FF", "FS", "SI")),
n_offspeed = sum(pitch_type %in% c("CH", "CU", "SL", "ST")),
n_missing = sum(is.na(pitch_type))) |>
kableExtra::kable(format = "html",
colnames = c("Name", "N Pitches", "N Fastball", "N Offspeed", "N Missing"))
#| label: set-up-mice
#| echo: true
pitches[,c("release_speed", "release_extension", "release_spin_rate")] <- scale(pitches[,c("release_speed", "release_extension", "release_spin_rate")])
pitches <- pitches |>
mutate(
rate_cos_spin = release_spin_rate * cos(spin_axis),
rate_sin_spin = release_spin_rate * sin(spin_axis)
)
imp0 <- mice(pitches, m = 1, maxit = 0, method = "pmm")
methods <- imp0$method
methods["spin_axis"] <- "bpnreg"
methods["cos_spin"] <- "~cos(spin_axis)"
methods["sin_spin"] <- "~sin(spin_axis)"
methods["cos_2spin"] <- "~cos(2*spin_axis)"
methods["sin_2spin"] <- "~sin(2*spin_axis)"
methods
pred_mat <- imp0$predictorMatrix
pred_mat[,c("game_date", "pitcher", "batter", "home_team", "away_team", "type",
"events", "player_name", "description", "spin_axis")] <- 0
pred_mat["spin_axis", c("cos_spin", "sin_spin", "cos_2spin", "sin_2spin")] <- 0
pred_mat[c("cos_spin", "sin_spin", "cos_2spin", "sin_2spin"), ] <- 0
pred_mat[c("cos_spin", "sin_spin", "cos_2spin", "sin_2spin"), "spin_axis"] <- 1
pred_mat[c("spin_axis", "cos_spin", "sin_spin"), c("spin_axis", "cos_spin", "sin_spin", "release_speed", "release_extension")]
imps <- readRDS("data/pitch_imputations.rds")
#| label: tbl-glmm-pooled
#| tbl-cap: Pooled summary of the fits for the GLMM.
#| echo: false
fit <- readRDS("data/fit-glmm-imps.rds")
pooled <- pool(fit)
summary(pooled) |>
mutate(
se = std.error,
moe = qt(0.975, df = df) * se,
u95 = estimate + moe,
l95 = estimate - moe
) |>
select(term, estimate, se, l95, u95) |>
kableExtra::kbl(format = "markdown", digits = 4, booktabs = TRUE,
col.names = c("Term", "$\\hat{\\beta}$", "$se(\\hat{\\beta})$",
"LB 95% CI", "UB 95% CI"))
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(strike ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = bernoulli(link = "logit"),
data = imps,
cores = 8,
chains = 2,
refresh = 1000,
save_model = "log-reg-glmm-pitch.stan")
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(strike ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = bernoulli(link = "logit"),
data = imps,
cores = 6,
threads = threading(6),
chains = 2,
refresh = 1000,
save_model = "log-reg-glmm-pitch.stan")
#| label: fit-brm-imps-norun
#| include: false
#| eval: false
library(brms)
brm_fit <- brm_multiple(strike ~ cos_spin * pitch_type + sin_spin * pitch_type
+ cos_2spin * pitch_type + sin_2spin * pitch_type
+ release_speed + release_extension
+ rate_cos_spin + rate_sin_spin
+ plate_x * plate_z + plate_x^2 + plate_z^2
+ release_pos_x * release_pos_z
+ release_pos_x^2 + release_pos_z^2
+ (1 + pitch_type | player_name),
family = bernoulli(link = "logit"),
data = imps,
cores = 6,
# threads = threading(6),
chains = 2,
refresh = 100,
save_model = "log-reg-glmm-pitch.stan")
