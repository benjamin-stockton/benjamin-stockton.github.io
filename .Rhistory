geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023")
library(baseballr)
library(dplyr)
library(ggplot2)
dat <- lapply(2015:2023, function(yr) {statcast_leaderboards(leaderboard = "expected_statistics", year = yr, min_pa = 25)}) |>
bind_rows()
dat
dat |>
filter(
pa >= 100
) |>
ggplot(aes(woba, est_woba, color = est_woba_minus_woba_diff, alpha = 1 - 1/pa)) +
geom_point() +
geom_abline(slope = 1, color = "red", linetype = "dashed")
top_batters <- dat |>
group_by(player_id, `last_name, first_name`) |>
summarize(
total_pa = sum(pa)
) |>
arrange(desc(total_pa)) |>
head(25)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name")) |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 |> head()
s <- sample(25, size = 20)
dat_train <- dat2 |>
filter(
player_id %in% top_batters$player_id[s]
)
dat_test <- dat2 |>
filter(
player_id %in% top_batters$player_id[-s]
)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name")) |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 |> head()
s <- sample(25, size = 20)
dat_train <- dat2 |>
filter(
player_id %in% top_batters$player_id[s],
year >= 2016
)
dat_test <- dat2 |>
filter(
player_id %in% top_batters$player_id[-s],
year >= 2016
)
dat2 |>
ggplot(aes(year, est_woba)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(player_id~.)
dat2 |>
ggplot(aes(year, est_woba)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(player_id~.) +
theme(axis.text.x = element_text(angle = 45))
dat2 |>
ggplot(aes(year, est_woba)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(player_id~.) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(lme4)
fit1 <- lmer(woba ~ est_woba + woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ est_woba + woba_l1 + (t + tsq | player_id), data = dat_train)
fit4 <- lmer(woba ~ est_woba + woba_l1 + (splines::bs(t) | player_id), data = dat_train)
summary(fit4)
AIC(fit1)
AIC(fit3)
AIC(fit4)
library(lattice)
dotplot(ranef(fit4))
plot(fit4)
#| label: fig-fitted-lmm
#| fig-height: 8
#| fig-width: 6
# Predict on training set
preds  <- merTools::predictInterval(fit4, newdata = dat_train, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat3 <- bind_cols(dat_train, preds)
dat3$group <- "train"
# Predict on test set with 90% prediction intervals
test_preds  <- merTools::predictInterval(fit4, newdata = dat_test, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat4 <- bind_cols(dat_test, test_preds)
dat4$group <- "test"
# Combine the data together
combined_dat <- bind_rows(dat3, dat4) %>%
arrange(player_id)
## Plot the time series of predictions and observed data
combined_dat |>
mutate(group = factor(group, levels = c("train", "test"))) |>
ggplot(aes(x = t, y = woba)) +
geom_ribbon(aes(ymin = lwr,
ymax = upr),
fill = "light grey",
alpha = 0.8) +
geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023")
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + (t + tsq | player_id), data = dat_train)
fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
summary(fit4)
AIC(fit1)
AIC(fit3)
AIC(fit4)
library(lattice)
dotplot(ranef(fit4))
plot(fit4)
#| label: fig-fitted-lmm
#| fig-height: 8
#| fig-width: 6
# Predict on training set
preds  <- merTools::predictInterval(fit4, newdata = dat_train, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat3 <- bind_cols(dat_train, preds)
dat3$group <- "train"
# Predict on test set with 90% prediction intervals
test_preds  <- merTools::predictInterval(fit4, newdata = dat_test, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat4 <- bind_cols(dat_test, test_preds)
dat4$group <- "test"
# Combine the data together
combined_dat <- bind_rows(dat3, dat4) %>%
arrange(player_id)
## Plot the time series of predictions and observed data
combined_dat |>
mutate(group = factor(group, levels = c("train", "test"))) |>
ggplot(aes(x = t, y = woba)) +
geom_ribbon(aes(ymin = lwr,
ymax = upr),
fill = "light grey",
alpha = 0.8) +
geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023")
library(baseballr)
library(dplyr)
library(ggplot2)
dat <- lapply(2015:2023, function(yr) {statcast_leaderboards(leaderboard = "expected_statistics", year = yr, min_pa = 25)}) |>
bind_rows()
dat
dat |>
filter(
pa >= 100
) |>
ggplot(aes(woba, est_woba, color = est_woba_minus_woba_diff, alpha = 1 - 1/pa)) +
geom_point() +
geom_abline(slope = 1, color = "red", linetype = "dashed")
top_batters <- dat |>
group_by(player_id, `last_name, first_name`) |>
summarize(
total_pa = sum(pa)
) |>
arrange(desc(total_pa)) |>
head(25)
dat <- dat |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name"))
dat2 |> head()
s <- sample(length(unique(dat$player_id)), prob = 0.75)
dat <- dat |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name"))
dat2 |> head()
s <- sample(length(unique(dat$player_id)), size = floor(length(unique(dat$player_id)) * 0.75))
dat_train <- dat |>
filter(
player_id %in% top_batters$player_id[s],
year >= 2016
)
dat_test <- dat |>
filter(
player_id %in% top_batters$player_id[-s],
year >= 2016
)
floor(length(unique(dat$player_id)) * 0.75)
dat <- dat |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name"))
dat2 |> head()
s <- sample(length(unique(dat$player_id)), size = floor(length(unique(dat$player_id)) * 0.75))
dat_train <- dat |>
filter(
player_id %in% top_batters$player_id[s],
year >= 2016
)
dat_test <- dat |>
filter(
player_id %in% top_batters$player_id[-s],
year >= 2016
)
dat <- dat |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name"))
s <- sample(length(unique(dat$player_id)), size = floor(length(unique(dat$player_id)) * 0.75))
dat_train <- dat |>
filter(
# player_id %in% top_batters$player_id[s],
year >= 2016
)
dat_test <- dat |>
filter(
# player_id %in% top_batters$player_id[-s],
year >= 2016
)
dat2 |>
ggplot(aes(year, est_woba)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(player_id~.) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + (t + tsq | player_id), data = dat_train)
fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + (t + tsq | player_id), data = dat_train)
# fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
summary(fit4)
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + (t + tsq | player_id), data = dat_train)
# fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
summary(fit3)
AIC(fit1)
AIC(fit3)
# AIC(fit4)
library(lattice)
dotplot(ranef(fit3))
plot(fit3)
#| label: fig-fitted-lmm
#| fig-height: 8
#| fig-width: 6
# Predict on training set
preds  <- merTools::predictInterval(fit3, newdata = dat_train, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat3 <- bind_cols(dat_train, preds)
dat3$group <- "train"
# Predict on test set with 90% prediction intervals
test_preds  <- merTools::predictInterval(fit3, newdata = dat_test, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat4 <- bind_cols(dat_test, test_preds)
dat4$group <- "test"
# Combine the data together
combined_dat <- bind_rows(dat3, dat4) %>%
arrange(player_id)
## Plot the time series of predictions and observed data
combined_dat |>
filter(
player_id %in% top_batters$player_id
) |>
mutate(group = factor(group, levels = c("train", "test"))) |>
ggplot(aes(x = t, y = woba)) +
geom_ribbon(aes(ymin = lwr,
ymax = upr),
fill = "light grey",
alpha = 0.8) +
geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023")
dat <- dat |>
mutate(
t = year - 2016,
tsq = (t - 3.5)^2,
woba_l1 = lag(woba)
)
dat2 <- left_join(top_batters, dat, by = c("player_id", "last_name, first_name"))
s <- sample(length(unique(dat$player_id)), size = floor(length(unique(dat$player_id)) * 0.75))
dat_train <- dat |>
filter(
# player_id %in% top_batters$player_id[s],
year >= 2016,
pa >= 150
)
dat_test <- dat |>
filter(
# player_id %in% top_batters$player_id[-s],
year >= 2016,
pa >= 150
)
dat2 |>
ggplot(aes(year, est_woba)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(player_id~.) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + (t + tsq | player_id), data = dat_train)
fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + (t + tsq | player_id), data = dat_train)
# fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
summary(fit3)
AIC(fit1)
AIC(fit3)
# AIC(fit4)
library(lattice)
dotplot(ranef(fit3))
plot(fit3)
#| label: fig-fitted-lmm
#| fig-height: 8
#| fig-width: 6
# Predict on training set
preds  <- merTools::predictInterval(fit3, newdata = dat_train, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat3 <- bind_cols(dat_train, preds)
dat3$group <- "train"
# Predict on test set with 90% prediction intervals
test_preds  <- merTools::predictInterval(fit3, newdata = dat_test, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat4 <- bind_cols(dat_test, test_preds)
dat4$group <- "test"
# Combine the data together
combined_dat <- bind_rows(dat3, dat4) %>%
arrange(player_id)
## Plot the time series of predictions and observed data
combined_dat |>
filter(
player_id %in% top_batters$player_id
) |>
mutate(group = factor(group, levels = c("train", "test"))) |>
ggplot(aes(x = t, y = woba)) +
geom_ribbon(aes(ymin = lwr,
ymax = upr),
fill = "light grey",
alpha = 0.8) +
geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023")
library(lme4)
fit1 <- lmer(woba ~ woba_l1 + est_woba + (t | player_id), data = dat_train)
fit3 <- lmer(woba ~ woba_l1 + est_woba + (t + tsq | player_id), data = dat_train)
# fit4 <- lmer(woba ~ woba_l1 + (splines::bs(t) | player_id), data = dat_train)
summary(fit3)
AIC(fit1)
AIC(fit3)
# AIC(fit4)
library(lattice)
dotplot(ranef(fit3))
plot(fit3)
#| label: fig-fitted-lmm
#| fig-height: 8
#| fig-width: 6
# Predict on training set
preds  <- merTools::predictInterval(fit3, newdata = dat_train, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat3 <- bind_cols(dat_train, preds)
dat3$group <- "train"
# Predict on test set with 90% prediction intervals
test_preds  <- merTools::predictInterval(fit3, newdata = dat_test, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat4 <- bind_cols(dat_test, test_preds)
dat4$group <- "test"
# Combine the data together
combined_dat <- bind_rows(dat3, dat4) %>%
arrange(player_id)
## Plot the time series of predictions and observed data
combined_dat |>
filter(
player_id %in% top_batters$player_id
) |>
mutate(group = factor(group, levels = c("train", "test"))) |>
ggplot(aes(x = t, y = woba)) +
geom_ribbon(aes(ymin = lwr,
ymax = upr),
fill = "light grey",
alpha = 0.8) +
geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023")
#| label: fig-fitted-lmm
#| fig-height: 8
#| fig-width: 6
# Predict on training set
preds  <- merTools::predictInterval(fit3, newdata = dat_train, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat3 <- bind_cols(dat_train, preds)
dat3$group <- "train"
# Predict on test set with 90% prediction intervals
test_preds  <- merTools::predictInterval(fit3, newdata = dat_test, n.sims = 100, returnSims = TRUE, seed = 657, level = 0.95) %>%
as.data.frame()
dat4 <- bind_cols(dat_test, test_preds)
dat4$group <- "test"
# Combine the data together
combined_dat <- bind_rows(dat3, dat4) %>%
arrange(player_id)
## Plot the time series of predictions and observed data
combined_dat |>
filter(
player_id %in% top_batters$player_id
) |>
mutate(group = factor(group, levels = c("train", "test"))) |>
ggplot(aes(x = t, y = woba)) +
geom_ribbon(aes(ymin = lwr,
ymax = upr),
fill = "light grey",
alpha = 0.8) +
geom_line(aes(y = fit),
col = "red",
size = 1) +
geom_point(aes(fill = group),
size = 3,
shape = 21) +
geom_line() +
facet_wrap(~player_id) +
theme(strip.background = element_rect(fill = "black"),
strip.text = element_text(face = "bold", color = "white"),
legend.position = "right") +
labs(x = "t",
y = "wOBA",
title = "wOBA over 2016-2023") +
theme_bw()
